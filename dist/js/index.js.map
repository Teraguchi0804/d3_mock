{"version":3,"sources":["webpack:///index.js","webpack:///webpack/bootstrap 331fe6ddb4ca86965ca9","webpack:///./src/js/app.js","webpack:///./src/js/main.js","webpack:///./~/d3/build/d3.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","dragstarted","d","d3","event","active","simulation","alphaTarget","restart","fx","x","fy","y","dragged","dragended","width","height","DATA_FILE_PATH","svg","select","attr","window","console","log","color","scaleOrdinal","schemeCategory20","forceSimulation","force","forceLink","forceManyBody","forceCenter","json","error","graph","ticked","link","source","target","node","append","selectAll","data","links","enter","Math","sqrt","value","nodes","group","drag","on","text","global","factory","this","ascendingComparator","f","ascending","tickStep","start","stop","count","step0","abs","max","step1","pow","floor","LN10","e10","e5","e2","length","Map","map$1","object","map","each","key","set","Array","isArray","o","i","n","createObject","setObject","createMap","setMap","Set","add","linear","t","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","a","b","computeUpperHullIndexes","points","indexes","size","cross","slice","Path","_x0","_y0","_x1","_y1","_","path","tree","isNaN","parent","xm","ym","xp","yp","right","bottom","j","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","Infinity","cover","removeAll","remove","defaultX","defaultY","quadtree","Quadtree","NaN","undefined","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","e","abort","end","apply","noabort","r","maybeNotify","queue","concurrency","arguments","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","context","_context","Radial","curve","_curve","curveRadial","radial","radialLine","l","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","min","slope2","h","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","v","s","extend","definition","prototype","Object","create","Color","format","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","hasOwnProperty","g","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","k","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","round","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","document","createElement","cssRoot","documentElement","cssView","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","push","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","name","indexOf","type","get","set$2","callback","noop$1","concat","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","setTimeout","interval","clearInterval","setInterval","newInterval","floori","offseti","field","date","Date","ceil","d0","d1","offset","step","range","filter","test","setTime","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","match","re","fill","align","symbol","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","string","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","w","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","toString","utcFormat","utcParse","requote","replace","requoteRe","names","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","index","unknown","implicit","domain","slice$3","has","band","rescale","reverse","range$$1","paddingInner","paddingOuter","bandwidth","values","ordinalRange","rangeRound","padding","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$3","number$1","interpolateRound","linearish","ticks","tickFormat","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","args","sourceEvent","none$2","empty","EnterNode","datum","_parent","bindIndex","update","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise$1","nextSibling","parentNode","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","window$$1","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","selection","root","init","schedule","__transition","state","CREATED","set$3","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","transition","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","top","range0","range1","position","order","tickExit","tickEnter","line","left","merge","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","r3","a2","c2","a3","c3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","i0","i1","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","find","nodeById","nodeId","x$2","y$2","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","identifier","defaultFilter","button","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","array","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","compare","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","clipExtent","visible","from","to","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","sy0","r0y","sign$1","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant$1","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","random","sum","transpose","zip","prefix","constructor","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","defer","await","results","awaitAll","constant$2","pi$2","tau$2","buffer","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","cross$1","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","T","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","defaultMimeType","html","createRange","createContextualFragment","xml","responseXML","dsv$1","csv$1","tsv$1","performance","requestAnimationFrame","TypeError","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","0","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","point$5","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$6","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","alphaMin","stepper","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","preventDefault","constant$8","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$10","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","temp","valueOf","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","circle$1","pointEqual","isSubject","extent$1","length$2","object$1","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$8","reflectX","reflectY","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCollide","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","defineProperty"],"mappings":"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","file":"index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar cats = __webpack_require__(1);\n\t\n\t//console.log(cats);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar d3 = __webpack_require__(2);\n\t\n\tvar width = 1280,\n\t    height = 800;\n\t\n\t// 読み込みデータファイル\n\tvar DATA_FILE_PATH = './miserables.json';\n\t\n\t//セレクト\n\tvar svg = d3.select(\"svg\");\n\twidth = +svg.attr(\"width\");\n\theight = +svg.attr(\"height\");\n\t\n\twindow.console.log(\"svg\", svg);\n\t\n\tvar color = d3.scaleOrdinal(d3.schemeCategory20);\n\t\n\tvar simulation = d3.forceSimulation().force(\"link\", d3.forceLink().id(function (d) {\n\t    return d.id;\n\t})).force(\"charge\", d3.forceManyBody()) //クーロン力/万有引力\n\t.force(\"center\", d3.forceCenter(width / 2, height / 2)); //重力の設定：世界の中心に落ちていく力\n\t\n\t\n\td3.json(DATA_FILE_PATH, function (error, graph) {\n\t    //jsonからデータを読み込み\n\t    if (error) throw error; //json読み込みエラーの場合はエラーを返す\n\t\n\t    //nodeとnodeを結ぶ線を描画\n\t    var link = svg.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\") //セレクト\n\t    .data(graph.links) //データバインド\n\t    .enter().append(\"line\") //足りない要素を追加\n\t    .attr(\"stroke-width\", function (d) {\n\t        return Math.sqrt(d.value);\n\t    });\n\t\n\t    //nodeを表す円を描画\n\t    var node = svg.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"circle\") //セレクト\n\t    .data(graph.nodes) //データバインド\n\t    .enter().append(\"circle\") //足りない要素を追加\n\t    .attr(\"r\", 5) //円の半径\n\t    .attr(\"fill\", function (d) {\n\t        return color(d.group);\n\t    }) //円を塗り潰し:グループごとに同じ色で\n\t    .call(d3.drag() //ドラッグのコールバック\n\t    .on(\"start\", dragstarted) //イベントリスナー：ドラッグ開始\n\t    .on(\"drag\", dragged) //イベントリスナー：ドラッグ中\n\t    .on(\"end\", dragended)); //イベントリスナー：ドラッグ終了\n\t\n\t    node.append(\"title\").text(function (d) {\n\t        return d.id;\n\t    });\n\t\n\t    simulation.nodes(graph.nodes).on(\"tick\", ticked);\n\t\n\t    simulation.force(\"link\").links(graph.links);\n\t\n\t    //再描画時に(tickイベント発生時)に線を描画\n\t    function ticked() {\n\t        link.attr(\"x1\", function (d) {\n\t            return d.source.x;\n\t        }).attr(\"y1\", function (d) {\n\t            return d.source.y;\n\t        }).attr(\"x2\", function (d) {\n\t            return d.target.x;\n\t        }).attr(\"y2\", function (d) {\n\t            return d.target.y;\n\t        });\n\t\n\t        node.attr(\"cx\", function (d) {\n\t            return d.x;\n\t        }).attr(\"cy\", function (d) {\n\t            return d.y;\n\t        });\n\t    }\n\t});\n\t\n\t//ドラッグ開始\n\tfunction dragstarted(d) {\n\t    // window.console.log('Start!!');\n\t    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n\t    d.fx = d.x;\n\t    d.fy = d.y;\n\t}\n\t\n\t//ドラッグ中\n\tfunction dragged(d) {\n\t    d.fx = d3.event.x;\n\t    d.fy = d3.event.y;\n\t}\n\t\n\t//ドラッグ\n\tfunction dragended(d) {\n\t    // window.console.log('Ended!!');\n\t    if (!d3.event.active) simulation.alphaTarget(0);\n\t    d.fx = null;\n\t    d.fy = null;\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.4.0. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.4.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return range(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t};\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t};\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar pairs = function(array) {\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = [p, p = array[++i]];\n\t  return pairs;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar area = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar pi$1 = Math.PI;\n\tvar tau$1 = 2 * pi$1;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau$1 - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$1 + tau$1;\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$1)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tvar slice$1 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$1.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke(q) {\n\t  if (!q._start) {\n\t    try { start(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar epsilon$1 = 1e-12;\n\tvar pi$2 = Math.PI;\n\tvar halfPi$1 = pi$2 / 2;\n\tvar tau$2 = 2 * pi$2;\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$2(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t        da = Math.abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$2 - epsilon$1) {\n\t      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$1) {\n\t        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$1) {\n\t        var p0 = asin(rp / r0 * Math.sin(ap)),\n\t            p1 = asin(rp / r1 * Math.sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * Math.cos(a01),\n\t          y01 = r1 * Math.sin(a01),\n\t          x10 = r0 * Math.cos(a10),\n\t          y10 = r0 * Math.sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$1) {\n\t        var x11 = r1 * Math.cos(a11),\n\t            y11 = r1 * Math.sin(a11),\n\t            x00 = r0 * Math.cos(a00),\n\t            y00 = r0 * Math.sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$2) {\n\t          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$1) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$1) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t    return [Math.cos(a) * r, Math.sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$1 = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant$2(0),\n\t      y1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$1 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$1,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$2(0),\n\t      endAngle = constant$2(tau$2),\n\t      padAngle = constant$2(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$1().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$2);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$2);\n\t  }\n\t};\n\t\n\tvar cross$1 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\tvar kx = Math.sin(tau$2 / 10) * kr;\n\tvar ky = -Math.cos(tau$2 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$2 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross$1,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$2(circle),\n\t      size = constant$2(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$1) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$1) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$2([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending$1 = function(series) {\n\t  var sums = series.map(sum$1);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$1(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$1(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$1),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis$1(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$2 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed$1 = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear$1(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential$1(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = color$$1(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$2);\n\tvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar interpolateNumber = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolate(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: interpolateNumber(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolate = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? interpolateNumber\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : interpolateNumber)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar noop$1 = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set$2(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke$1() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tvar formatSpecifier = function(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t};\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Convert negative to positive, and compute the prefix.\n\t        // Note that -0 is not less than 0, but 1 / -0 is!\n\t        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t        // Perform the initial formatting.\n\t        value = formatType(value, precision);\n\t\n\t        // If the original value was negative, it may be rounded to zero during\n\t        // formatting; treat this as (positive) zero.\n\t        if (valueNegative) {\n\t          i = -1, n = value.length;\n\t          valueNegative = false;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                || (type === \"x\" && 96 < c && c < 103)\n\t                || (type === \"X\" && 64 < c && c < 71)) {\n\t              valueNegative = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t        case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t      }\n\t      return padding + valuePrefix + value + valueSuffix;\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$3 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$3.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$4() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$4() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$4().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant$4(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond$1 = 1000;\n\tvar durationMinute$1 = durationSecond$1 * 60;\n\tvar durationHour$1 = durationMinute$1 * 60;\n\tvar durationDay$1 = durationHour$1 * 24;\n\tvar durationWeek$1 = durationDay$1 * 7;\n\tvar durationMonth = durationDay$1 * 30;\n\tvar durationYear = durationDay$1 * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond$1],\n\t    [second$$1,  5,  5 * durationSecond$1],\n\t    [second$$1, 15, 15 * durationSecond$1],\n\t    [second$$1, 30, 30 * durationSecond$1],\n\t    [minute$$1,  1,      durationMinute$1],\n\t    [minute$$1,  5,  5 * durationMinute$1],\n\t    [minute$$1, 15, 15 * durationMinute$1],\n\t    [minute$$1, 30, 30 * durationMinute$1],\n\t    [  hour$$1,  1,      durationHour$1  ],\n\t    [  hour$$1,  3,  3 * durationHour$1  ],\n\t    [  hour$$1,  6,  6 * durationHour$1  ],\n\t    [  hour$$1, 12, 12 * durationHour$1  ],\n\t    [   day$$1,  1,      durationDay$1   ],\n\t    [   day$$1,  2,  2 * durationDay$1   ],\n\t    [  week,  1,      durationWeek$1  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point$5 = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point$5(node, event);\n\t};\n\t\n\tfunction none$2() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none$2 : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$5(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$2;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$2(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise$1() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise$1);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point$5(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point$5(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$3(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$3(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? interpolateNumber\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$3(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$3(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$3(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start$1(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start$1(name) ? init : set$3;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar slice$4 = Array.prototype.slice;\n\t\n\tvar identity$5 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon$2 = 1e-6;\n\t\n\tfunction translateX(scale0, scale1, d) {\n\t  var x = scale0(d);\n\t  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t}\n\t\n\tfunction translateY(scale0, scale1, d) {\n\t  var y = scale0(d);\n\t  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        transform = orient === top || orient === bottom ? translateX : translateY,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\"),\n\t        k = orient === top || orient === left ? -1 : 1,\n\t        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$4.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(circle, x, y) {\n\t  var dx = circle.x - x,\n\t      dy = circle.y - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // If there are only three elements in the front-chain…\n\t    if ((k = a.previous) === (j = b.next)) {\n\t      // If the new circle intersects the third circle,\n\t      // rotate the front chain to try the next position.\n\t      if (intersects(j._, c._)) {\n\t        a = b, b = j, --i;\n\t        continue pack;\n\t      }\n\t    }\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    else {\n\t      sj = j._.r, sk = k._.r;\n\t      do {\n\t        if (sj <= sk) {\n\t          if (intersects(j._, c._)) {\n\t            b = j, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          j = j.next, sj += j._.r;\n\t        } else {\n\t          if (intersects(k._, c._)) {\n\t            a = k, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          k = k.previous, sk += k._.r;\n\t        }\n\t      } while (j !== k.next);\n\t    }\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle a to centroid.\n\t    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c._, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$1 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index$2(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index$2,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$7(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$2(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$2(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$7(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$3 = function(x) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$3 = function(y) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$1) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$3\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$3\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$3) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$3) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$3) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$3) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$3 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      var site = cell.site,\n\t          halfedges = cell.halfedges,\n\t          j = -1,\n\t          m = halfedges.length,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this,\n\t        i0, i1 = that._found || 0,\n\t        cell = that.cells[i1] || that.cells[i1 = 0],\n\t        dx = x - cell.site[0],\n\t        dy = y - cell.site[1],\n\t        d2 = dx * dx + dy * dy;\n\t\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0],\n\t            vy = y - v[1],\n\t            v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$10 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$6 = new Transform(1, 0, 0);\n\t\n\ttransform.prototype = Transform.prototype;\n\t\n\tfunction transform(node) {\n\t  return node.__zoom || identity$6;\n\t}\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$6;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$1,\n\t      extent = defaultExtent,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate$$1 = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx0 = transform.invertX(extent[0][0]) - x0,\n\t        dx1 = transform.invertX(extent[1][0]) - x1,\n\t        dy0 = transform.invertY(extent[0][1]) - y0,\n\t        dy1 = transform.invertY(extent[1][1]) - y1;\n\t    return transform.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$1();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$1();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$1();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$1();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$1();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$1();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (exports.event.touches.length === n) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$1();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$1();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type$1),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type$1),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type$1(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty$1(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent$1,\n\t      filter = defaultFilter$2,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type$1(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type$1(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$2();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$2();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$2();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar tau$3 = pi$3 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = range(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(range(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$3 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$3 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius$1(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius$1,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$5.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar quarterPi = pi$4 / 4;\n\tvar tau$4 = pi$4 * 2;\n\t\n\tvar degrees$1 = 180 / pi$4;\n\tvar radians = pi$4 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log$1 = Math.log;\n\tvar pow$1 = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt$1 = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$2() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(feature, stream) {\n\t    streamGeometry(feature.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$2;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$4);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area$2 = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$4) phi1 = 90;\n\t    else if (deltaSum < -epsilon$4) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    boundsPoint(lambda, phi);\n\t  }\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$2,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t      u = x0 * x + y0 * y + z0 * z,\n\t      v = m && -acos(u) / m, // area weight\n\t      w = atan2(m, u); // line weight\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid$1 = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t};\n\t\n\tvar constant$13 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$4;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t}\n\t\n\tvar circle$1 = function() {\n\t  var center = constant$13([0, 0]),\n\t      radius = constant$13(90),\n\t      precision = constant$13(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$2,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$2,\n\t  point: noop$2,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$2;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$2 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$2(object$1);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$2 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$7 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt$1(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$2\n\t};\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$2(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$2(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$2(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$3 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$7) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar sum$2 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$2.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$4,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$4, -halfPi$3]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$4\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$3;\n\t    stream.point(-pi$4, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$4, phi);\n\t    stream.point(pi$4, 0);\n\t    stream.point(pi$4, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$4, -phi);\n\t    stream.point(-pi$4, 0);\n\t    stream.point(-pi$4, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$4;\n\t            point1[1] += epsilon$4;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt$1(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$4) < epsilon$4,\n\t        meridian = polar || delta < epsilon$4;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$4 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t};\n\t\n\tvar transform$1 = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt$1(a * a + b * b + c * c),\n\t          phi2 = asin$1(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$4 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin$1(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt$1(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin$1(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt$1(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin$1(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$3];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$4);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$4 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$3 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t      f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t    var r = f / pow$1(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$8 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$7, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$4);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.entries = entries;\n\texports.keys = keys;\n\texports.values = values;\n\texports.map = map$1;\n\texports.set = set;\n\texports.nest = nest;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential;\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.polygonArea = area;\n\texports.polygonCentroid = centroid;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains;\n\texports.polygonLength = length$1;\n\texports.path = path;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.arc = arc;\n\texports.area = area$1;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross$1;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$1;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.interpolate = interpolate;\n\texports.interpolateArray = array$1;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = interpolateNumber;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.interpolateBasis = basis$2;\n\texports.interpolateBasisClosed = basisClosed$1;\n\texports.quantize = quantize;\n\texports.dispatch = dispatch;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.formatLocale = formatLocale;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$4;\n\texports.scaleIdentity = identity$4;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.scaleSequential = sequential;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.creator = creator;\n\texports.customEvent = customEvent;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.transition = transition;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$1;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$3;\n\texports.forceY = y$3;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomIdentity = identity$6;\n\texports.zoomTransform = transform;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoArea = area$2;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid$1;\n\texports.geoCircle = circle$1;\n\texports.geoClipExtent = extent$1;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoDistance = distance;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoIdentity = identity$8;\n\texports.geoInterpolate = interpolate$2;\n\texports.geoLength = length$2;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoPath = index$3;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoRotation = rotation;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform$1;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 331fe6ddb4ca86965ca9","var cats = require('./main.js');\n\n//console.log(cats);\n\n\n// WEBPACK FOOTER //\n// ./src/js/app.js","var d3 = require(\"d3\");\n\nvar width = 1280,\n    height = 800;\n\n// 読み込みデータファイル\nvar DATA_FILE_PATH = './miserables.json';\n\n\n//セレクト\nvar svg = d3.select(\"svg\");\n    width = +svg.attr(\"width\");\n    height = +svg.attr(\"height\");\n\nwindow.console.log(\"svg\", svg);\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20);\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n    .force(\"charge\", d3.forceManyBody()) //クーロン力/万有引力\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));  //重力の設定：世界の中心に落ちていく力\n\n\nd3.json(DATA_FILE_PATH, function(error, graph) { //jsonからデータを読み込み\n  if (error) throw error; //json読み込みエラーの場合はエラーを返す\n\n  //nodeとnodeを結ぶ線を描画\n  var link = svg.append(\"g\")\n      .attr(\"class\", \"links\")\n      .selectAll(\"line\") //セレクト\n      .data(graph.links) //データバインド\n      .enter().append(\"line\") //足りない要素を追加\n      .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n  //nodeを表す円を描画\n  var node = svg.append(\"g\")\n      .attr(\"class\", \"nodes\")\n      .selectAll(\"circle\") //セレクト\n      .data(graph.nodes) //データバインド\n      .enter().append(\"circle\") //足りない要素を追加\n      .attr(\"r\", 5) //円の半径\n      .attr(\"fill\", function(d) { return color(d.group); })　//円を塗り潰し:グループごとに同じ色で\n      .call(d3.drag() //ドラッグのコールバック\n          .on(\"start\", dragstarted) //イベントリスナー：ドラッグ開始\n          .on(\"drag\", dragged) //イベントリスナー：ドラッグ中\n          .on(\"end\", dragended)); //イベントリスナー：ドラッグ終了\n\n  node.append(\"title\")\n      .text(function(d) { return d.id; });\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  //再描画時に(tickイベント発生時)に線を描画\n  function ticked() {\n    link\n        .attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node\n        .attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n  }\n});\n\n//ドラッグ開始\nfunction dragstarted(d) {\n  // window.console.log('Start!!');\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x;\n  d.fy = d.y;\n}\n\n//ドラッグ中\nfunction dragged(d) {\n  d.fx = d3.event.x;\n  d.fy = d3.event.y;\n}\n\n//ドラッグ\nfunction dragended(d) {\n  // window.console.log('Ended!!');\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx = null;\n  d.fy = null;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","// https://d3js.org Version 4.4.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.4.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$1)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this,\n        i0, i1 = that._found || 0,\n        cell = that.cells[i1] || that.cells[i1 = 0],\n        dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy;\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$7) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$8 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$7, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$8;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}