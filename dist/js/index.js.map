{"version":3,"sources":["webpack:///index.js","webpack:///webpack/bootstrap 9b747e8a8a4dcb58e36d","webpack:///./src/js/app.js","webpack:///./src/js/main.js","webpack:///./~/d3/build/d3.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","d3","dataSet","select","selectAll","data","enter","append","attr","d","i","global","factory","this","ascendingComparator","f","x","ascending","tickStep","start","stop","count","step0","Math","abs","max","step1","pow","floor","log","LN10","error","e10","e5","e2","length","Map","map$1","object","map","each","value","key","set","Array","isArray","o","n","createObject","setObject","createMap","setMap","Set","add","linear","t","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","sqrt","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","a","b","computeUpperHullIndexes","points","indexes","size","cross","slice","Path","_x0","_y0","_x1","_y1","_","path","tree","y","isNaN","parent","xm","ym","xp","yp","right","bottom","j","node","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","Infinity","cover","removeAll","remove","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","undefined","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","e","abort","end","apply","noabort","r","maybeNotify","queue","concurrency","arguments","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","context","_context","Radial","curve","_curve","curveRadial","radial","radialLine","l","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","min","slope2","h","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","v","s","extend","definition","prototype","Object","create","Color","color","format","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","hasOwnProperty","g","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","k","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","round","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","document","createElement","cssRoot","documentElement","cssView","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","push","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","name","indexOf","type","get","set$2","callback","noop$1","concat","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","setTimeout","interval","clearInterval","setInterval","newInterval","floori","offseti","field","date","Date","ceil","d0","d1","offset","step","range","filter","test","setTime","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","match","re","fill","align","symbol","width","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","string","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","w","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","toString","utcFormat","utcParse","requote","replace","requoteRe","names","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","index","unknown","implicit","domain","slice$3","has","band","rescale","reverse","range$$1","paddingInner","paddingOuter","bandwidth","values","ordinalRange","rangeRound","padding","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","source","target","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$3","number$1","interpolateRound","linearish","ticks","tickFormat","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","args","sourceEvent","none$2","empty","EnterNode","datum","_parent","bindIndex","update","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise$1","nextSibling","parentNode","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","window$$1","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","selection","root","init","schedule","__transition","state","CREATED","set$3","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","transition","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","top","range0","range1","position","order","tickExit","tickEnter","line","text","left","merge","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","node_copy","copyData","height","Node$2","encloses","dr","encloseN","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","r3","a2","c2","a3","c3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","i0","i1","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","find","nodeById","nodeId","x$2","y$2","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter","button","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","array","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","svg","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","compare","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","clipExtent","visible","from","to","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","sy0","r0y","sign$1","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant$1","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","random","sum","transpose","zip","prefix","constructor","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","defer","await","results","awaitAll","constant$2","pi$2","tau$2","buffer","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","cross$1","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","T","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","defaultMimeType","html","createRange","createContextualFragment","json","xml","responseXML","dsv$1","csv$1","tsv$1","performance","requestAnimationFrame","TypeError","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","0","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","point$5","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","descendants","shuffle$1","siblings","constant$6","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","force","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","preventDefault","constant$8","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$10","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","temp","valueOf","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","circle$1","pointEqual","isSubject","extent$1","length$2","object$1","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$8","reflectX","reflectY","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","defineProperty"],"mappings":"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","file":"index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar cats = __webpack_require__(1);\n\t\n\t//console.log(cats);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar d3 = __webpack_require__(2);\n\t\n\tvar dataSet = [300, 140, 5, 60, 240];\n\t\n\td3.select(\"#myGraph\").selectAll(\"rect\").data(dataSet).enter().append(\"rect\").attr(\"x\", 0).attr(\"y\", function (d, i) {\n\t  return i * 25;\n\t}).attr(\"width\", function (d, i) {\n\t  return d + \"px\";\n\t}).attr(\"height\", \"20px\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.4.0. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.4.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return range(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t};\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t};\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar pairs = function(array) {\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = [p, p = array[++i]];\n\t  return pairs;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar area = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar pi$1 = Math.PI;\n\tvar tau$1 = 2 * pi$1;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau$1 - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$1 + tau$1;\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$1)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tvar slice$1 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$1.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke(q) {\n\t  if (!q._start) {\n\t    try { start(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar epsilon$1 = 1e-12;\n\tvar pi$2 = Math.PI;\n\tvar halfPi$1 = pi$2 / 2;\n\tvar tau$2 = 2 * pi$2;\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$2(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t        da = Math.abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$2 - epsilon$1) {\n\t      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$1) {\n\t        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$1) {\n\t        var p0 = asin(rp / r0 * Math.sin(ap)),\n\t            p1 = asin(rp / r1 * Math.sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * Math.cos(a01),\n\t          y01 = r1 * Math.sin(a01),\n\t          x10 = r0 * Math.cos(a10),\n\t          y10 = r0 * Math.sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$1) {\n\t        var x11 = r1 * Math.cos(a11),\n\t            y11 = r1 * Math.sin(a11),\n\t            x00 = r0 * Math.cos(a00),\n\t            y00 = r0 * Math.sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$2) {\n\t          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$1) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$1) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t    return [Math.cos(a) * r, Math.sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$1 = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant$2(0),\n\t      y1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$1 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$1,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$2(0),\n\t      endAngle = constant$2(tau$2),\n\t      padAngle = constant$2(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$1().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$2);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$2);\n\t  }\n\t};\n\t\n\tvar cross$1 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\tvar kx = Math.sin(tau$2 / 10) * kr;\n\tvar ky = -Math.cos(tau$2 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$2 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross$1,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$2(circle),\n\t      size = constant$2(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$1) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$1) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$2([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending$1 = function(series) {\n\t  var sums = series.map(sum$1);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$1(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$1(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$1),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis$1(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$2 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed$1 = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear$1(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential$1(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = color$$1(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$2);\n\tvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar interpolateNumber = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolate(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: interpolateNumber(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolate = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? interpolateNumber\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : interpolateNumber)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar noop$1 = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set$2(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke$1() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tvar formatSpecifier = function(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t};\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Convert negative to positive, and compute the prefix.\n\t        // Note that -0 is not less than 0, but 1 / -0 is!\n\t        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t        // Perform the initial formatting.\n\t        value = formatType(value, precision);\n\t\n\t        // If the original value was negative, it may be rounded to zero during\n\t        // formatting; treat this as (positive) zero.\n\t        if (valueNegative) {\n\t          i = -1, n = value.length;\n\t          valueNegative = false;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                || (type === \"x\" && 96 < c && c < 103)\n\t                || (type === \"X\" && 64 < c && c < 71)) {\n\t              valueNegative = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t        case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t      }\n\t      return padding + valuePrefix + value + valueSuffix;\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$3 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$3.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$4() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$4() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$4().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant$4(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond$1 = 1000;\n\tvar durationMinute$1 = durationSecond$1 * 60;\n\tvar durationHour$1 = durationMinute$1 * 60;\n\tvar durationDay$1 = durationHour$1 * 24;\n\tvar durationWeek$1 = durationDay$1 * 7;\n\tvar durationMonth = durationDay$1 * 30;\n\tvar durationYear = durationDay$1 * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond$1],\n\t    [second$$1,  5,  5 * durationSecond$1],\n\t    [second$$1, 15, 15 * durationSecond$1],\n\t    [second$$1, 30, 30 * durationSecond$1],\n\t    [minute$$1,  1,      durationMinute$1],\n\t    [minute$$1,  5,  5 * durationMinute$1],\n\t    [minute$$1, 15, 15 * durationMinute$1],\n\t    [minute$$1, 30, 30 * durationMinute$1],\n\t    [  hour$$1,  1,      durationHour$1  ],\n\t    [  hour$$1,  3,  3 * durationHour$1  ],\n\t    [  hour$$1,  6,  6 * durationHour$1  ],\n\t    [  hour$$1, 12, 12 * durationHour$1  ],\n\t    [   day$$1,  1,      durationDay$1   ],\n\t    [   day$$1,  2,  2 * durationDay$1   ],\n\t    [  week,  1,      durationWeek$1  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point$5 = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point$5(node, event);\n\t};\n\t\n\tfunction none$2() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none$2 : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$5(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$2;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$2(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise$1() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise$1);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point$5(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point$5(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$3(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$3(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? interpolateNumber\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$3(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$3(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$3(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start$1(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start$1(name) ? init : set$3;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar slice$4 = Array.prototype.slice;\n\t\n\tvar identity$5 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon$2 = 1e-6;\n\t\n\tfunction translateX(scale0, scale1, d) {\n\t  var x = scale0(d);\n\t  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t}\n\t\n\tfunction translateY(scale0, scale1, d) {\n\t  var y = scale0(d);\n\t  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        transform = orient === top || orient === bottom ? translateX : translateY,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\"),\n\t        k = orient === top || orient === left ? -1 : 1,\n\t        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$4.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(circle, x, y) {\n\t  var dx = circle.x - x,\n\t      dy = circle.y - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // If there are only three elements in the front-chain…\n\t    if ((k = a.previous) === (j = b.next)) {\n\t      // If the new circle intersects the third circle,\n\t      // rotate the front chain to try the next position.\n\t      if (intersects(j._, c._)) {\n\t        a = b, b = j, --i;\n\t        continue pack;\n\t      }\n\t    }\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    else {\n\t      sj = j._.r, sk = k._.r;\n\t      do {\n\t        if (sj <= sk) {\n\t          if (intersects(j._, c._)) {\n\t            b = j, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          j = j.next, sj += j._.r;\n\t        } else {\n\t          if (intersects(k._, c._)) {\n\t            a = k, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          k = k.previous, sk += k._.r;\n\t        }\n\t      } while (j !== k.next);\n\t    }\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle a to centroid.\n\t    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c._, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$1 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index$2(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index$2,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$7(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$2(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$2(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$7(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$3 = function(x) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$3 = function(y) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$1) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$3\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$3\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$3) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$3) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$3) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$3) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$3 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      var site = cell.site,\n\t          halfedges = cell.halfedges,\n\t          j = -1,\n\t          m = halfedges.length,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this,\n\t        i0, i1 = that._found || 0,\n\t        cell = that.cells[i1] || that.cells[i1 = 0],\n\t        dx = x - cell.site[0],\n\t        dy = y - cell.site[1],\n\t        d2 = dx * dx + dy * dy;\n\t\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0],\n\t            vy = y - v[1],\n\t            v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$10 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$6 = new Transform(1, 0, 0);\n\t\n\ttransform.prototype = Transform.prototype;\n\t\n\tfunction transform(node) {\n\t  return node.__zoom || identity$6;\n\t}\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$6;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$1,\n\t      extent = defaultExtent,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate$$1 = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx0 = transform.invertX(extent[0][0]) - x0,\n\t        dx1 = transform.invertX(extent[1][0]) - x1,\n\t        dy0 = transform.invertY(extent[0][1]) - y0,\n\t        dy1 = transform.invertY(extent[1][1]) - y1;\n\t    return transform.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$1();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$1();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$1();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$1();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$1();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$1();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (exports.event.touches.length === n) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$1();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$1();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type$1),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type$1),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type$1(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty$1(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent$1,\n\t      filter = defaultFilter$2,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type$1(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type$1(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$2();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$2();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$2();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar tau$3 = pi$3 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = range(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(range(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$3 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$3 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius$1(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius$1,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$5.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar quarterPi = pi$4 / 4;\n\tvar tau$4 = pi$4 * 2;\n\t\n\tvar degrees$1 = 180 / pi$4;\n\tvar radians = pi$4 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log$1 = Math.log;\n\tvar pow$1 = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt$1 = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$2() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(feature, stream) {\n\t    streamGeometry(feature.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$2;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$4);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area$2 = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$4) phi1 = 90;\n\t    else if (deltaSum < -epsilon$4) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    boundsPoint(lambda, phi);\n\t  }\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$2,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t      u = x0 * x + y0 * y + z0 * z,\n\t      v = m && -acos(u) / m, // area weight\n\t      w = atan2(m, u); // line weight\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid$1 = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t};\n\t\n\tvar constant$13 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$4;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t}\n\t\n\tvar circle$1 = function() {\n\t  var center = constant$13([0, 0]),\n\t      radius = constant$13(90),\n\t      precision = constant$13(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$2,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$2,\n\t  point: noop$2,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$2;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$2 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$2(object$1);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$2 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$7 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt$1(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$2\n\t};\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$2(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$2(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$2(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$3 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$7) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar sum$2 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$2.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$4,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$4, -halfPi$3]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$4\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$3;\n\t    stream.point(-pi$4, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$4, phi);\n\t    stream.point(pi$4, 0);\n\t    stream.point(pi$4, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$4, -phi);\n\t    stream.point(-pi$4, 0);\n\t    stream.point(-pi$4, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$4;\n\t            point1[1] += epsilon$4;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt$1(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$4) < epsilon$4,\n\t        meridian = polar || delta < epsilon$4;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$4 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t};\n\t\n\tvar transform$1 = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt$1(a * a + b * b + c * c),\n\t          phi2 = asin$1(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$4 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin$1(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt$1(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin$1(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt$1(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin$1(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$3];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$4);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$4 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$3 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t      f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t    var r = f / pow$1(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$8 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$7, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$4);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.entries = entries;\n\texports.keys = keys;\n\texports.values = values;\n\texports.map = map$1;\n\texports.set = set;\n\texports.nest = nest;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential;\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.polygonArea = area;\n\texports.polygonCentroid = centroid;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains;\n\texports.polygonLength = length$1;\n\texports.path = path;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.arc = arc;\n\texports.area = area$1;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross$1;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$1;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.interpolate = interpolate;\n\texports.interpolateArray = array$1;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = interpolateNumber;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.interpolateBasis = basis$2;\n\texports.interpolateBasisClosed = basisClosed$1;\n\texports.quantize = quantize;\n\texports.dispatch = dispatch;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.formatLocale = formatLocale;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$4;\n\texports.scaleIdentity = identity$4;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.scaleSequential = sequential;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.creator = creator;\n\texports.customEvent = customEvent;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.transition = transition;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$1;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$3;\n\texports.forceY = y$3;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomIdentity = identity$6;\n\texports.zoomTransform = transform;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoArea = area$2;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid$1;\n\texports.geoCircle = circle$1;\n\texports.geoClipExtent = extent$1;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoDistance = distance;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoIdentity = identity$8;\n\texports.geoInterpolate = interpolate$2;\n\texports.geoLength = length$2;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoPath = index$3;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoRotation = rotation;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform$1;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9b747e8a8a4dcb58e36d","var cats = require('./main.js');\n\n//console.log(cats);\n\n\n// WEBPACK FOOTER //\n// ./src/js/app.js","var d3 = require(\"d3\");\n\nvar dataSet = [300, 140, 5, 60, 240];\n\nd3.select(\"#myGraph\")\n    .selectAll(\"rect\")\n    .data(dataSet)\n    .enter()\n    .append(\"rect\")\n    .attr(\"x\", 0)\n    .attr(\"y\", function(d, i){\n      return i * 25;\n    })\n    .attr(\"width\", function (d,i) {\n      return d + \"px\";\n    })\n    .attr(\"height\",\"20px\");\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","// https://d3js.org Version 4.4.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.4.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$1)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this,\n        i0, i1 = that._found || 0,\n        cell = that.cells[i1] || that.cells[i1 = 0],\n        dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy;\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$7) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$8 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$7, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$8;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}